@inject AuthService AuthService
@inject NavigationManager Navigation
@implements IDisposable

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Simple Expense Tracker</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        @if (AuthService.IsAuthenticated)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Dashboard
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="income">
                    <span class="bi bi-plus-circle-fill-nav-menu" aria-hidden="true"></span> Income
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="expenses">
                    <span class="bi bi-dash-circle-fill-nav-menu" aria-hidden="true"></span> Expenses
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="categories">
                    <span class="bi bi-tags-fill-nav-menu" aria-hidden="true"></span> Categories
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="reports">
                    <span class="bi bi-graph-up-nav-menu" aria-hidden="true"></span> Reports
                </NavLink>
            </div>
            
            <hr class="nav-divider">
            
            <div class="nav-item px-3">
                <div class="nav-link text-muted">
                    Welcome, @AuthService.CurrentUser?.Username
                </div>
            </div>
            <div class="nav-item px-3">
                <button class="nav-link btn btn-link text-start" @onclick="HandleLogout">
                    <span class="bi bi-box-arrow-right-nav-menu" aria-hidden="true"></span> Logout
                </button>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-box-arrow-in-right-nav-menu" aria-hidden="true"></span> Login
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="register">
                    <span class="bi bi-person-plus-fill-nav-menu" aria-hidden="true"></span> Register
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }

    protected override void OnInitialized()
    {
        // This component should re-render when authentication state changes
        AuthService.StateHasChanged += StateHasChanged;
    }

    public void Dispose()
    {
        AuthService.StateHasChanged -= StateHasChanged;
    }
}
